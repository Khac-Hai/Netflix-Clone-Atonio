// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id" ) @db.ObjectId
  name String
  image String?
  email String? @unique
  emailVerified DateTime?
  hashedPassword String?
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  favoriteIds String[] @db.ObjectId
  sessions Session[]
  account Account[]


}
model Account{
  id String @id @default(auto()) @map("_id" ) @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scopes String? @db.String
  id_token String? @db.String
  session_state String? 

  user User @relation(fields: [userId],references: [id],onDelete:Cascade)

  @@unique([provider,providerAccountId])
}
model Session{
  id String @id @default(auto()) @map("_id" ) @db.ObjectId
  sessionToken String @unique
  userId String @db.ObjectId
  expiresAt DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

}

model VerificationToken{
  id String @id @default(auto()) @map("_id" ) @db.ObjectId
  token String @unique
  identifier String
  expires DateTime

  @@unique([identifier,token])

  
}
model Movie{
  id String @id @default(auto()) @map("_id" ) @db.ObjectId
  title String
  videoUrl String
  thumbnailUrl String
  genre String
  description String
  duration String
}